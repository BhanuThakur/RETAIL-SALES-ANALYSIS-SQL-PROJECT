Project Title: Retail Sales Analysis
Level: Beginner

This project is designed to demonstrate SQL skills and techniques typically used by data analysts to explore, clean, and analyze retail sales data. The project involves setting up a retail sales database, performing exploratory data analysis (EDA), and answering specific business questions through SQL queries. This project is ideal for those who are starting their journey in data analysis and want to build a solid foundation in SQL.

Objectives
Set up a retail sales database: Create and populate a retail sales database with the provided sales data.
Data Cleaning: Identify and remove any records with missing or null values.
Exploratory Data Analysis (EDA): Perform basic exploratory data analysis to understand the dataset.
Business Analysis: Use SQL to answer specific business questions and derive insights from the sales data.
Project Structure

create database sql_project_p1;

create table  retail_sales (
transactions_id int primary key,	
sale_date date,
sale_time time,
customer_id	int,
gender	varchar (20),
age	int,
category varchar (20),
quantity float ,
price_per_unit	float,
cogs float,
total_sale float
);

select * from retail_sales;



-- QUESTION 1  -- WRITE SQL QUERY TO RETRIEVE ALL COLUMNS FOR SALES MADE ON "2022-11-05" ?
select * from retail_sales where sale_date = "2022-11-05";


-- QUESTION 2  -- WRITE A SQL QUERY TO RETRIEVE ALL TRANSACTIONS WHERE THE CATEGORY IS 'CLOTHING' AND QUANTITY SOLD IS MORE THAN 2 IN THE MONTH OF NOV. 2022 ?    
SELECT * FROM RETAIL_SALES WHERE CATEGORY = "CLOTHING"  AND QUANTITY > 2  AND SALE_DATE BETWEEN "2022-11-01" AND "2022-11-30"; 
   

-- QUESTION 3  -- WRITE A SQL QUERY TO CALCULATE THE TOTAL SALES FOR EACH CATEGORY AND TOTAL NUMBER OF ORDER PLACED FOR EACH CATEGORY.
SELECT CATEGORY , COUNT(TRANSACTIONS_ID) , SUM(TOTAL_SALE) FROM RETAIL_SALES GROUP BY CATEGORY ; 


-- QUESTION 4  -- WRITE A SQL QUERY TO CALCULATE THE AVERAGE AGE OF CUSTOMERS WHO PURCHASED ITEMS FROM 'BEAUTY' CATEGORY ?
SELECT * FROM RETAIL_SALES;
SELECT AVG(AGE) FROM RETAIL_SALES WHERE CATEGORY = 'CLOTHING'; 


-- QUESTION 5  -- WRITE A SQL QUERY TO FIND ALL TRANSACTIONS WHERE THE TOTAL_SALE IS GREATER THAN 1000. 
SELECT * FROM RETAIL_SALES WHERE TOTAL_SALE > 1000;


-- QUESTION 6  -- WRITE A SQL QUERY TO FIND THE TOTAL NUMBER OF TRANSACTIONS (TRANSACTIONS_ID) MADE BY EACH GENDER IN EACH CATEGORY.
SELECT GENDER , CATEGORY , COUNT(TRANSACTIONS_ID) FROM RETAIL_SALES GROUP BY GENDER,CATEGORY ; 



-- QUESTION 7  -- WRITE A SQL QUERY TO CALCULATE THE AVERAGE SALE FOR EACH MONTH. FIND OUT BEST SELLING MONTH IN EACH YEAR.
SELECT MONTHNAME(SALE_DATE) AS MONTH_NAME, YEAR(SALE_DATE) AS SALE_YEAR, ROUND(AVG(TOTAL_SALE),2) AS AVG_SALE
FROM RETAIL_SALES GROUP BY MONTHNAME(SALE_DATE),YEAR(SALE_DATE) 
ORDER BY YEAR(SALE_DATE) , ROUND(AVG(TOTAL_SALE),2) DESC;

SELECT * FROM
(
SELECT 
    MONTHNAME(SALE_DATE) AS MONTH_NAME, 
    YEAR(SALE_DATE) AS SALE_YEAR, 
    ROUND(AVG(TOTAL_SALE), 2) AS AVG_TOTAL_SALE,
    RANK() OVER (PARTITION BY YEAR(SALE_DATE) ORDER BY AVG(TOTAL_SALE) DESC) AS RN
FROM RETAIL_SALES 
GROUP BY MONTHNAME(SALE_DATE), YEAR(SALE_DATE) ORDER BY YEAR(SALE_DATE) , ROUND(AVG(TOTAL_SALE),2) DESC
) AS T1 WHERE RN = 1 ; 
 

-- QUESTION 8  -- WRITE A SQL QUERY TO FIND THE TOP 5 CUSTOMERS BASED ON THE HIGHEST TOTAL SALE. 
SELECT CUSTOMER_ID,SUM(TOTAL_SALE) FROM RETAIL_SALES GROUP BY CUSTOMER_ID ORDER BY SUM(TOTAL_SALE) DESC LIMIT 5;


-- QUESTION 9  -- WRITE A SQL QUERY TO FIND THE NUMBER OF UNIQUE CUSTOMERS WHO PURCHASED ITEMS FROM EACH CATEGORY.
SELECT CATEGORY , COUNT(DISTINCT CUSTOMER_ID) FROM RETAIL_SALES GROUP BY CATEGORY; 


-- QUESTION 10  -- WRITE A SQL QUERY TO CREATE EACH SHIFT AND NUMBER OF ORDERS (EXAMPLE MORNING <=12, AFTERNOON BETWEEN 12 & 17, EVENING >17).
SELECT * FROM RETAIL_SALES; 
SELECT COUNT(*) AS TOTAL_ORDERS , SALE_TIME < "12:00:00" AS MORNING , SALE_TIME BETWEEN "12:00:00" AND "17:00:00" AS AFTERNOON ,  SALE_TIME > "17:00:00" 
AS EVENING FROM RETAIL_SALES GROUP BY MORNING, AFTERNOON , EVENING ;


-- END OF PROJECT 
